{
  Generator: {},
  GeneratedSources: [
    {
      HintName: OnReadyAttribute.g.cs,
      Source:
// <auto-generated/>
using System;

namespace Shaka.Godot.OnReady;

/// <summary>
/// Attribute that automatically defers initialization of a member until its called.
/// </summary>
[AttributeUsage(AttributeTargets.Method | AttributeTargets.Property)]
public class OnReadyAttribute : Attribute
{
    /// <summary>
    /// Relative or absolute path in a scene tree like <see cref="Godot.NodePath"/>
    /// </summary>
    public string NodePath { get; }

    /// <summary>
    /// Constructs a new OnReadyAttribute instance.
    /// </summary>
    /// <param name="nodePath">Relative or absolute path in a scene tree like <see cref="Godot.NodePath"/></param>
    public OnReadyAttribute(string nodePath)
    {
        NodePath = nodePath;
    }
}
    },
    {
      HintName: TestNamespace.Examples.g.cs,
      Source:
// <auto-generated/>
using Godot;
namespace TestNamespace;
partial class Examples
{
    public partial global::Godot.Node MyNode => GetNode<global::Godot.Node>("/root/mynode");
}

    }
  ],
  Diagnostics: [
    {
      Location: /*
    [OnReady("frezfrezf")]
    public List<MyTest> MyString { get; }
                        ^^^^^^^^

*/
 : (6,24)-(6,32),
      Message: The [OnReady] member 'MyString' type must derive from Godot.Node,
      Severity: Error,
      Descriptor: {
        Id: SGOR001,
        Title: On ready member type must derive from Godot.Node,
        Description: The [OnReady] member type must derive from Godot.Node. Change the type to a type which derives from Node.,
        MessageFormat: The [OnReady] member '{0}' type must derive from Godot.Node,
        Category: Usage,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: /*
    [OnReady("frezfrezf")]
    public List<MyTest> MyString { get; }
                        ^^^^^^^^

*/
 : (6,24)-(6,32),
      Message: The [OnReady] member 'MyString' must be partial without an implementation,
      Severity: Error,
      Descriptor: {
        Id: SGOR002,
        Title: On ready member must be partial and must not be implemented,
        Description: The [OnReady] member must be partial and must not have a body. Make the member partial and remove the body.,
        MessageFormat: The [OnReady] member '{0}' must be partial without an implementation,
        Category: Usage,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: /*
    [OnReady("/root/mynode")]
    public MyTest MyCustomer()
                  ^^^^^^^^^^
    {
*/
 : (9,18)-(9,28),
      Message: The [OnReady] member 'MyCustomer' type must derive from Godot.Node,
      Severity: Error,
      Descriptor: {
        Id: SGOR001,
        Title: On ready member type must derive from Godot.Node,
        Description: The [OnReady] member type must derive from Godot.Node. Change the type to a type which derives from Node.,
        MessageFormat: The [OnReady] member '{0}' type must derive from Godot.Node,
        Category: Usage,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    },
    {
      Location: /*
    [OnReady("/root/mynode")]
    public MyTest MyCustomer()
                  ^^^^^^^^^^
    {
*/
 : (9,18)-(9,28),
      Message: The [OnReady] member 'MyCustomer' must be partial without an implementation,
      Severity: Error,
      Descriptor: {
        Id: SGOR002,
        Title: On ready member must be partial and must not be implemented,
        Description: The [OnReady] member must be partial and must not have a body. Make the member partial and remove the body.,
        MessageFormat: The [OnReady] member '{0}' must be partial without an implementation,
        Category: Usage,
        DefaultSeverity: Error,
        IsEnabledByDefault: true
      }
    }
  ]
}